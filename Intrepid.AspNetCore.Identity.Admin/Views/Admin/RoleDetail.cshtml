@model RoleCountModel
@{
    ViewData["Title"] = "Add Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Heading -->
<h1 class="h3 mb-4 text-gray-800">@(string.IsNullOrEmpty(Model.RoleId) ? "Add " : "Update ")Role</h1>

<div class="row">
    <div class="col-lg-6">

        <!-- Default Card Example -->
        <div class="card mb-4">
            <div class="card-header">
                Role
            </div>

            <div class="card-body">
                <form method="post" asp-controller="Admin">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="@Model.RoleId" />
                    <input type="hidden" asp-for="@Model.ConcurrencyStamp" />
                    <div class="form-group">
                        <label>Role Name:</label>
                        @{
                            if (Model.Name == "Admin")
                            {
                                <input type="text" asp-for="@Model.Name" class="form-control form-control-user" aria-describedby="emailHelp" placeholder="Enter Role Name..." readonly>
                            }
                            else
                            {
                                <input type="text" asp-for="@Model.Name" class="form-control form-control-user" aria-describedby="emailHelp" placeholder="Enter Role Name...">
                            }

                        }
                        <span asp-validation-for="@Model.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <select asp-for="@Model.SelectedClaims">
                            @{
                                foreach (var customclaim in Model.AvailableClaims)
                                {
                                    var claimValue = string.Join(";", customclaim.ClaimType, customclaim.Name);
                                    <option value="@claimValue">@customclaim.Description</option>
                                }
                            }
                        </select>
                        <span asp-validation-for="@Model.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label>User Count:</label><br />
                        <label>@Model.Count</label>
                    </div>

                    <button type="submit" class="btn btn-primary btn-user btn-block" asp-action="AddUpdateRole">@(string.IsNullOrEmpty(Model.RoleId) ? "Create" : "Update")</button>
                    @{
                        if (!string.IsNullOrEmpty(Model.RoleId))
                        {
                            <button type="submit" class="btn btn-secondary btn-user btn-block" asp-action="Delete" onclick="return confirm('Are you sure you want to delete this role?');">Delete</button>
                        }

                    }

                    <hr>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <partial name="_ValidationScriptsPartial" />
}


